your_sort:
.LFB8:
    subq $8, %rsp
    movq %r11, (%rsp)
    movq (%rsp), %r11
    addq $8, %rsp
    ret %r11
run:
.LFB9:
    subq $8, %rsp
    movq %r11, (%rsp)
    in (0),%rax
    movq %rax, %r8
    andq $1, %r8d
    andq $2, %eax
    movq %rax, %rdi
    in (0),%rsi
    movq %rsi, %rdx
    salq $3, %rsi
    leaq allocator_base(%rsi), %rax
    leaq cur_allocator, %r11
    movq %rax, (%r11)
    movq $0, %eax
    jmp .L3
.L4:
    in (1),%rcx
    leaq allocator_base(, %rax, 8), %r11
    movq %rcx, (%r11)
    addq $1, %rax
.L3:
    cbl %rax,%rdx,.L4
    cbe $0,%rdi,.L5
    leaq cur_allocator, %r11
    movq (%r11), %rax
    addq %rax, %rsi
    leaq cur_allocator, %r11
    movq %rsi, (%r11)
    movq $0, %ecx
    jmp .L6
.L7:
    leaq (%rax, %rcx, 8), %rsi
    in (0),%rdi
    movq %rdi, (%rsi)
    addq $1, %rcx
.L6:
    cbl %rcx,%rdx,.L7
    jmp .L8
.L5:
    leaq cur_allocator, %r11
    movq (%r11), %rax
    addq %rax, %rsi
    leaq cur_allocator, %r11
    movq %rsi, (%r11)
    movq $0, %ecx
    jmp .L9
.L10:
    leaq (%rax, %rcx, 8), %rsi
    in (1),%rdi
    movq %rdi, (%rsi)
    addq $1, %rcx
.L9:
    cbl %rcx,%rdx,.L10
.L8:
    cbne $0,%r8,.L14
    movq (%rsp), %r11
    addq $8, %rsp
    ret %r11
.L13:
    leaq (%rax, %rcx, 8), %r11
    movq (%r11), %rsi
    out %rsi,(0)
    addq $1, %rcx
    jmp .L11
.L14:
    movq $0, %ecx
.L11:
    cbl %rcx,%rdx,.L13
    movq (%rsp), %r11
    addq $8, %rsp
    ret %r11
.LFE8:
.LFE9:
    .comm allocator_base,8,8
    .comm cur_allocator,8,8

